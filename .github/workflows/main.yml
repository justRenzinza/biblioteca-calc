name: SonarQube Analysis

on:
  push:
    branches:
      - main  # A análise será executada quando houver um push para a branch main
  pull_request:
    branches:
      - main  # Também será executado quando você abrir um PR para a branch main

jobs:
  sonar:
    name: Run SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Verificar o repositório
      - name: Check out the code
        uses: actions/checkout@v3

      # Passo 2: Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Coloque a versão do Node.js que seu projeto usa

      # Passo 3: Instalar as dependências do projeto (usando npm ou yarn)
      - name: Install dependencies
        run: |
          npm install   # ou "yarn install" se você usa o Yarn

      # Passo 4: Rodar os testes (se necessário)
      - name: Run tests
        run: |
          npm test  # ou "yarn test" se você usar o Yarn

      # Passo 5: Instalar o SonarScanner
      - name: Install SonarScanner
        run: |
          wget -qO - https://downloads.sonarsource.com/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip > sonar-scanner.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-4.6.2.2472-linux /usr/local/sonar-scanner
          export PATH=$PATH:/usr/local/sonar-scanner/bin

      # Passo 6: Rodar a análise do SonarQube
      - name: Run SonarQube scanner
        run: |
          sonar-scanner \
            -Dsonar.projectKey=justRenzinza_biblioteca-calc
            -Dsonar.projectName="biblioteca-calc" \
            -Dsonar.sources=./my-ts-library/src \
            -Dsonar.tests=./my-ts-library/src \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN

    # Definindo variáveis de ambiente seguras
    env:
      SONAR_HOST_URL: ${{ https://sonarcloud.io }}
      SONAR_TOKEN: ${{ b8c8f1e999fbd5e62dab83d5ab84af8253e70398 }}
